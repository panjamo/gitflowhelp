# add follwing line(s) in C:\Users\<user>\.gitconfig
#
# [include]
# 	path = d:/Development/gitflowhelper/githelper/.gitconfigalias
#
[alias]
	logfull=log --graph --abbrev-commit --decorate --date=relative --format=format:\"%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)\"
	l = ! git logfull -n 20
	logfulltxt=log --graph --abbrev-commit --decorate --date=relative --format=format:\"%h - (%ar) %s - %an%d\"
	logfullbw=log --graph --abbrev-commit --decorate --date=relative --format=format:\"%h - (%ar) %s - %an%d\"

	# git log with submodules
	ls = ! git log --graph --oneline -U0 --submodule -20 $1 $2 $3 $4 | grep -E '^[*| /\\]+([0-9a-f]{7} |Submodule |> |$)' && echo end git ls


	# search in git diffs
	diffs = ! git rev-list --all | xargs git grep
	
	co=checkout
	ci=commit
	st = status --short
	staged = diff --name-only --cached
	br = branch

	hide = update-index --assume-unchanged
	unhide = update-index --no-assume-unchanged
	hidechanged = ! git status --short | grep \"^ M\" | awk  '{ print $2 }' | xargs git update-index --assume-unchanged
	hidden = ! git ls-files -v | grep \"^h\"
	cohidden = ! git ls-files -v | grep \"^h\" | awk  '{ print $2 }' | xargs git co -f 
	unhideall = ! git ls-files -v | grep \"^h\" | awk  '{ print $2 }' | xargs git unhide
	hideModified = ! git ls-files --modified | xargs git hide
	
	stagediff = ! git diff -G"." --name-only -z | xargs -0 git add && git st
	reset0diff = ! git stagediff && git diff --name-only -z | xargs -0 git co -f && git unstage
	stdiff = ! git diff -G"." --name-only
	unstage = reset HEAD --
	resetfdx = ! git reset --hard && git clean -fdx && git st
	b = ! git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads && ! git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/remotes

	deleteAllTrackedFiles = ! git ls-tree -z -r HEAD --name-only | xargs -0 rm
	findDangelingCommits = ! git fsck --full --no-reflogs --unreachable --lost-found | xargs -n 1 git log -n 1 --pretty=oneline 2> nul

	graph = ! 'C:\\Program Files\\TortoiseGit\\bin\\TortoiseGitProc.exe'  /command:revisiongraph

	# checkout and pull all branches
	ffall = ! git branch | grep  -oh '[^ ]*$' | xargs -n 1 git pullOne
	pullOne = ! git checkout --force $1 &&git pull --ff-only && echo working on 

	# track all remote branches
	trackAll = ! git branch -r | grep  -oh '\\(release/.*\\|support/.*\\|feature/.*\\|develop\\|master\\)$' | xargs -I branchName git branch --track branchName origin/branchName

	
	# show diffeneces between branch and origin/branch
	udiff = diff @{u}

	# comment only: "git rev-list support/12.0 --not develop --oneline" shows all commits in support/12.0 and not in develop
	branchdiff = ! \
		echo \"******** $1 --not $2\" && \
		git rev-list $1 --not $2 --oneline && \
		echo \"\" && \
		echo \"******** $2 --not $1\" && \
		git rev-list $2 --not $1 --oneline && \
		echo \"******** [end] git branchdiff\"

	# commits with a "fixup! ...." commit message from HEAD
	fixup=commit --fixup head

	# missing pushes to origin
	mp=push --all origin --dry-run

	dt = ! git difftool -d \"$1^\"

	rl = reflog
	subget=submodule update --init --recursive
	deleteUnreachable = ! git reflog expire --expire-unreachable=now --all && git fsck --unreachable && git gc --prune=now && git fsck --unreachable

	uniqueCommits = ! git rev-list --oneline --no-merges --all --not $(git rev-list --all ^HEAD --pretty=format:%h | grep -v commit) | grep -v Buildserver

	alias = ! git config --get-regexp alias

	flowhelp = ! explorer https://github.com/petervanderdoes/gitflow-avh/wiki
	
	diffcommit = ! git difftool -d --tool=kdiff3 \"$1^\" 

	mergedevelop = ! \
		git co  develop && \
		git pull -v && \
		git status && \
		git merge -v --ff-only $1 && \
		git co $1 && \
		git pull -v && \
		git status && \
		git merge -v --ff-only develop && \
		git branch --verbose --color --list develop 

	mergepushdevelop = ! \
		git mergedevelop $1 && \
		git push && \
		git co develop && \
		git push && \
		git branch --verbose --color --list develop 


	contains = ! \
		echo \"\" && \
		git branch -a --contains $1 && \
		git tag  --contains $1 && \
		git log --oneline -1 --format=format:\"%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)\"

	find = ! \
		echo \"Overview...\" && \
		git log --oneline --all | grep -i \"$1\" && \
		echo \"\nDetails...\" && \
		git log --oneline --all | \
			grep -i \"$1\"  | \
			awk  '{ print $1 }' | \
			xargs -L 1 git contains && \
		echo [finished git find]

	unreleasedCommits = !  git log `git describe --tags --abbrev=0`..HEAD --oneline && echo commits since `git describe --tags --abbrev=0`

	 releases = ! git tag -l Thi* | xargs -L1 git contains

	lg = !"git lg1"
    lg1 = !"git lg1-specific --all"
    lg2 = !"git lg2-specific --all"
    lg3 = !"git lg3-specific --all"

    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'

	showUnreachableCommits = ! git show --stat --oneline  $(git fsck --unreachable | git cat-file --batch-check | awk '/commit/ { print $3 }')
	applyCommitToWorkingDirectory = ! git diff $1~1 $1 | git apply - && echo [finished git applyCommitToWorkingDirectory]


	
# some commands from: https://gist.github.com/igal/53855
	ba = branch -a
	d = diff
	dc = diff --cached
	fp = format-patch
	g = !git gui &
	gr = log --graph
	go = log --graph --pretty=oneline --abbrev-commit
	k = !gitk &
	ka = !gitk --all &
	lc = log ORIG_HEAD.. --stat --no-merges
	lp = log --patch-with-stat
	mnf = merge --no-ff
	mnff = merge --no-ff
	mt = mergetool
	p = format-patch -1
	serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
	sra = svn rebase --all
	sh = !git-sh
	stm = status --untracked=no
	stfu = status --untracked=no
	